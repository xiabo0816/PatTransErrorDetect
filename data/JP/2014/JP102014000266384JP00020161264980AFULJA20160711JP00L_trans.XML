<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE PatentDocumentAndRelated  SYSTEM '/DTDS/ExternalStandards/ipphdb-entities.dtd' []><business:PatentDocumentAndRelated xmlns:base="http://www.sipo.gov.cn/XMLSchema/base" xmlns:business="http://www.sipo.gov.cn/XMLSchema/business" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:tbl="http://oasis-open.org/specs/soextblx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sipo.gov.cn/XMLSchema/business /DTDS/PatentDocument/Elements/OtherElements.xsd" xsdVersion="V2.2.1" file="JP102014000266384JP00020161264980AFULJA20160711JP00L.XML" dateProduced="20160812" status="C" lang="ja" country="JP" docNumber="2016126498" kind="A" datePublication="20160711">
  <business:BibliographicData lang="ja" country="JP">
    <business:PublicationReference dataFormat="standard" sequence="1">
      <base:DocumentID>
        <base:WIPOST3Code>JP</base:WIPOST3Code>
        <base:DocNumber>2016126498</base:DocNumber>
        <base:Kind>A</base:Kind>
        <base:Date>20160711</base:Date>
      </base:DocumentID>
    </business:PublicationReference>
    <business:PublicationReference dataFormat="original" sourceDB="JP" sequence="1">
      <base:DocumentID>
        <base:WIPOST3Code>JP</base:WIPOST3Code>
        <base:DocNumber>2016126498</base:DocNumber>
        <base:Kind>A</base:Kind>
        <base:Date>20160711</base:Date>
      </base:DocumentID>
    </business:PublicationReference>
    <business:PlainLanguageDesignation lang="ja">公開特許公報(A)</business:PlainLanguageDesignation>
    <business:ApplicationReference applType="10" dataFormat="standard" sequence="1">
      <base:DocumentID>
        <base:WIPOST3Code>JP</base:WIPOST3Code>
        <base:DocNumber>102014000266384</base:DocNumber>
        <base:Date>20141226</base:Date>
      </base:DocumentID>
    </business:ApplicationReference>
    <business:ApplicationReference applType="10" dataFormat="original" sequence="1" sourceDB="JP">
      <base:DocumentID>
        <base:WIPOST3Code>JP</base:WIPOST3Code>
        <base:DocNumber>2014266384</base:DocNumber>
        <base:Date>20141226</base:Date>
      </base:DocumentID>
    </business:ApplicationReference>
    <business:ClassificationIPCRDetails>
      <business:ClassificationIPCR sequence="1">
        <business:IPCVersionDate>20060101</business:IPCVersionDate>
        <business:ClassificationLevel>A</business:ClassificationLevel>
        <business:Section>G</business:Section>
        <business:MainClass>06</business:MainClass>
        <business:Subclass>F</business:Subclass>
        <business:MainGroup>17</business:MainGroup>
        <business:Subgroup>27</business:Subgroup>
        <business:SymbolPosition>F</business:SymbolPosition>
        <business:ClassificationValue>I</business:ClassificationValue>
        <base:ActionDate>
          <base:Date>20160613</base:Date>
        </base:ActionDate>
        <business:GeneratingOffice>
          <base:WIPOST3Code>JP</base:WIPOST3Code>
        </business:GeneratingOffice>
        <business:ClassificationStatus>B</business:ClassificationStatus>
        <business:ClassificationDataSource>H</business:ClassificationDataSource>
        <base:Text>G06F  17/27        20060101AFI20160613BHJP        </base:Text>
      </business:ClassificationIPCR>
      <business:ClassificationIPCR sequence="2">
        <business:IPCVersionDate>20130101</business:IPCVersionDate>
        <business:ClassificationLevel>A</business:ClassificationLevel>
        <business:Section>G</business:Section>
        <business:MainClass>10</business:MainClass>
        <business:Subclass>L</business:Subclass>
        <business:MainGroup>13</business:MainGroup>
        <business:Subgroup>08</business:Subgroup>
        <business:SymbolPosition>L</business:SymbolPosition>
        <business:ClassificationValue>I</business:ClassificationValue>
        <base:ActionDate>
          <base:Date>20160613</base:Date>
        </base:ActionDate>
        <business:GeneratingOffice>
          <base:WIPOST3Code>JP</base:WIPOST3Code>
        </business:GeneratingOffice>
        <business:ClassificationStatus>B</business:ClassificationStatus>
        <business:ClassificationDataSource>H</business:ClassificationDataSource>
        <base:Text>G10L  13/08        20130101ALI20160613BHJP        </base:Text>
      </business:ClassificationIPCR>
    </business:ClassificationIPCRDetails>
    <business:JPClassification>
      <business:FI type="main">G06F17/27 655</business:FI>
      <business:FI type="secondary">G10L13/08 110A</business:FI>
      <business:FClass>
        <business:FTerm>5B091CA02</business:FTerm>
      </business:FClass>
      <business:FClass>
        <business:FTerm>5B091CB32</business:FTerm>
      </business:FClass>
      <business:FClass>
        <business:FTerm>5B091CC01</business:FTerm>
      </business:FClass>
      <business:FClass>
        <business:Theme>5B091</business:Theme>
      </business:FClass>
    </business:JPClassification>
    <business:InventionTitle lang="ja" dataFormat="original" sourceDB="JP">词素分析装置和程序</business:InventionTitle>
    <business:Parties>
      <business:ApplicantDetails>
        <business:Applicant sequence="1" dataFormat="original" sourceDB="JP">
          <base:AddressBook lang="ja">
            <base:Name>KDDI株式会社</base:Name>
            <base:RegisteredNumber>000208891</base:RegisteredNumber>
            <base:Address>
              <base:AddressLine>0</base:AddressLine>
              <base:AddressMailCode>0</base:AddressMailCode>
              <base:PostBox>0</base:PostBox>
              <base:AddressRoom>0</base:AddressRoom>
              <base:AddressFloor>0</base:AddressFloor>
              <base:AddressBuilding>0</base:AddressBuilding>
              <base:Street>0</base:Street>
              <base:AddressCity>0</base:AddressCity>
              <base:County>0</base:County>
              <base:City>0</base:City>
              <base:Province>0</base:Province>
              <base:PostCode>0</base:PostCode>
              <base:WIPOST3Code>XP</base:WIPOST3Code>
              <base:Text>東京都新宿区西新宿二丁目3番2号</base:Text>
            </base:Address>
          </base:AddressBook>
          <business:OrganizationCode createDate="00000000" creator="00">0000000000</business:OrganizationCode>
        </business:Applicant>
      </business:ApplicantDetails>
      <business:InventorDetails>
        <business:Inventor sequence="1" dataFormat="original" sourceDB="JP">
          <base:AddressBook lang="ja">
            <base:Name>西澤  信行</base:Name>
            <base:Address>
              <base:AddressLine>0</base:AddressLine>
              <base:AddressMailCode>0</base:AddressMailCode>
              <base:PostBox>0</base:PostBox>
              <base:AddressRoom>0</base:AddressRoom>
              <base:AddressFloor>0</base:AddressFloor>
              <base:AddressBuilding>0</base:AddressBuilding>
              <base:Street>0</base:Street>
              <base:AddressCity>0</base:AddressCity>
              <base:County>0</base:County>
              <base:City>0</base:City>
              <base:Province>0</base:Province>
              <base:PostCode>0</base:PostCode>
              <base:WIPOST3Code>XP</base:WIPOST3Code>
              <base:Text>埼玉県ふじみ野市大原二丁目1番15号  株式会社KDDI研究所内</base:Text>
            </base:Address>
          </base:AddressBook>
        </business:Inventor>
      </business:InventorDetails>
      <business:AgentDetails>
        <business:CustomerNumber>00000</business:CustomerNumber>
        <business:Agent sequence="1" dataFormat="original" sourceDB="JP" repType="agent">
          <base:AddressBook lang="ja">
            <base:Name>福地  武雄</base:Name>
            <base:RegisteredNumber>100114258</base:RegisteredNumber>
          </base:AddressBook>
        </business:Agent>
        <business:Agent sequence="2" dataFormat="original" sourceDB="JP" repType="agent">
          <base:AddressBook lang="ja">
            <base:Name>白川  洋一</base:Name>
            <base:RegisteredNumber>100125391</base:RegisteredNumber>
          </base:AddressBook>
        </business:Agent>
      </business:AgentDetails>
    </business:Parties>
    <business:SpecificBibliographicData>
      <business:OriginalKindCode>A</business:OriginalKindCode>
    </business:SpecificBibliographicData>
    <business:StatisticalInformation>
      <business:ClaimsCount>5</business:ClaimsCount>
      <base:TotalPageCount>15</base:TotalPageCount>
    </business:StatisticalInformation>
  </business:BibliographicData>
  <business:Abstract dataFormat="original" lang="ja" sourceDB="JP">
    <base:Paragraphs>本发明提供一种词素分析装置和程序,其能够在抑制词素词典的大小增加的同时,考虑包括中间表达在内的词素表述假设,能够对应于混杂书写等表述的波动而高效且高精度地进行词素分析。 词素解析装置100输出与所输入的语句对应的词素解析结果,该词素解析装置100具备：从所输入的语句中切出并生成部分字符串的部分字符串生成部110、使用中间表达辞典125从所生成的部分字符串中生成能够作为中间阶段转换的1个以上的表达作为中间表达的中间表达生成部120、使用词素辞典135列举与所生成的中间表达及中间表达的连结对应的词素的词素列举部130、以及搜索并输出所列举的词素中满足规定的条件的词素串的词素串搜索部140。 图1</base:Paragraphs>
    <business:AbstractFigure>
      <base:Figure num="0001">
        <base:Image id="000002" he="64" wi="69" file="2016126498_000002.TIF" imgFormat="TIFF" imgContent="drawing"/>
      </base:Figure>
    </business:AbstractFigure>
  </business:Abstract>
  <business:Description dataFormat="original" sourceDB="JP">
    <business:TechnicalField>
      <base:Paragraphs num="0001">本发明涉及输出与输入的语句对应的词素串的词素分析装置和程序。</base:Paragraphs>
    </business:TechnicalField>
    <business:BackgroundArt>
      <base:Paragraphs num="0002">语音合成技术的一种典型的应用形式是文本到语音转换（Text-To-Speech,TTS）。 文本语音转换是合成与所输入的文本对应的语音波形的处理。 以下,该一系列的处理大致分为对所输入的文本进行解析而生成与文本的读法相关的信息的处理、和根据与读法相关的信息合成语音波形的处理这两个处理。 另外,输入是日语的汉字假名混杂句。</base:Paragraphs>
      <base:Paragraphs num="0003">以下,将用于表现与读法相关的信息的记号称为声音合成用记号。 语音合成用记号可以有各种形式,但在此,假设同时记载了构成一系列语音的音韵信息和主要表现为姿势、声音的高度的韵律信息。 作为这样的语音合成用记号的例子,有JEITA（电子信息技术产业协会）标准IT-4006“日语文本语音合成用记号”（参照非专利文献1）。 仅通过该记号难以表现声音的感情表现等,但至少包含为了记述通常的朗读声音的语言特征所需的信息。</base:Paragraphs>
      <base:Paragraphs num="0004">另一方面,合成语音波形的处理以合成如语音合成用符号那样的波形的方式进行。 因此,为了实现日语文本的正确朗读,制作与日语的汉字假名混杂句对应的正确的语音合成用记号即可。</base:Paragraphs>
      <base:Paragraphs num="0005">从任意的日语文本生成语音合成用记号的处理能够通过如下方式实现：将日语汉字假名混杂句划分为被称为词素的在语言表现上具有意义的最小单位,赋予每个词素的读音,参照词素列等适当地变形词素的信息,根据需要插入姿势等韵律性的边界,将它们连接起来。 此时,各词素的读音作为词素词典信息而预先制作并储存（参照专利文献1）。</base:Paragraphs>
      <base:Paragraphs num="0006">但是,词素不需要如语言学的定义那样,也可以是在进行一系列的处理的基础上适当划分的单位。 例如,为了更适当地处理词素的排列,有时将由多个词素构成的短语（复合名词句等）方便地视为一个词素来进行处理。 因此,以下,词素是指从其用途的观点出发尽可能适当地设定为处理上的最小单位的字符的排列（字符串）,此外,全部的语句能够通过将该字符串连结而构成。</base:Paragraphs>
      <base:Paragraphs num="0007">这样,对于某个语句,将其分割为词素的处理一般被称为词素解析处理,不限于语音合成处理,在语句的构成要素的提取等中使用。 TTS系统的读音的正确性很大程度上依赖于词素分析的精度,因此在TTS系统中要求高精度的词素分析。 另一方面,与从万维网(WWW)的大量的文本数据进行数据提取的情况不同,在TTS系统中,通常不需要在短时间内进行大量的文本数据处理。</base:Paragraphs>
      <base:Paragraphs num="0008">例如,即使一个句子的处理时间需要0.1秒左右,其使TTS系统中的处理延迟时间延迟0.1秒,该处理时间在很多情况下也不会成为问题。 即,与用于处理大量的文本的词素分析装置相比,不需要高速的处理。 另一方面,考虑到在诸如智能电话的移动终端上需要TTS系统,使系统的尺寸更小比提高系统的速度更重要。 即,根据该要求,以TTS系统为对象的词素解析装置可能成为与用于处理大量的文本的词素解析装置不同的设计。</base:Paragraphs>
      <base:Paragraphs num="0009">首先,作为词素解析的方法,以下说明基于最小成本法的方法。 在基于最小成本法的词素解析中,首先,预先定义反映了各词素的出现频率的发生成本函数和表示连续的词素的连接容易度的连接成本函数。 然后,通过从词素词典中登记的词素中搜索与输入文本一致且句子整体的成本最小的词素列,得到适当的词素列。 通常,产生成本函数被定义为出现频率越高的词素其值越小,连接成本函数被定义为越容易连接的词素列其值越小。</base:Paragraphs>
      <base:Paragraphs num="0010">即,在将词素列设为M=（m1,…,mn）、将发生成本函数设为Ct(m)、将连接成本函数设为Cc（m（i-k+1）,…,mi）时,通过求出成本的总和ΣCt+ΣCc最小的词素列M、即argmin（ΣCt+ΣCc）来进行词素解析处理。 但是,这里连接成本函数由k个词素的排列决定。</base:Paragraphs>
      <base:Paragraphs num="0011">当以这种方式定义成本函数时,即使仅看该部分序列,构成成本上最佳的整体序列的部分序列在成本上也是最佳的。 因此,成本上不是最佳的部分序列不会成为最佳的整体序列的构成要素,因此在搜索中不需要考虑。 这样,以不考虑不可能构成最优序列的部分序列的方式进行的最优序列的搜索法一般被称为动态规划法,能够高效地进行最优序列的搜索。</base:Paragraphs>
      <base:Paragraphs num="0012">成本函数的构成要素中的与发生成本有关的信息能够作为词素词典的内容来保持。 另一方面,关于连接成本,能够通过预先制作被称为连接表的表,并使用该表的值来求出。 但是,由于词素的种类多,所以一般难以制作并使用全部词素的组合的表。 因此,例如仅关注词素的词性类型等,关注词素的类,还使用类间的连接表。 另外,这些函数有时也被定义为值越大越优选的函数。 在这种情况下,搜索句子整体的值最大的词素序列。</base:Paragraphs>
      <base:Paragraphs num="0013">在词素分析中的词素列的搜索处理中,优选调查所有可能的词素的排列。 因此,在通常的词素解析中,为了得到词素的候补,反复进行如下处理：将从语句中的任意位置开始的部分字符串作为检索的关键字,从词素词典中登记的词素中取出与关键字的开头部分字符串相等的词素全部。 这种搜索通常被称为公共前缀搜索。 作为将其比较高效地表现的数据结构,已知有trie（trie）。</base:Paragraphs>
      <base:Paragraphs num="0014">在此,尝试是用于存储多个字符串的多叉树结构,在此,设为通过从各字符串的起始字符起依次将各字符存储为树的树枝来构建。 在尝试中,字符串间的共同的前缀在树结构上被共有,因此成为检索应对的字符串的前缀的全部登记词被配置在树结构的1个路径上。 即,通过从尝试的根（根）沿着检索关键字在树叶（叶）方向上追踪树,能够实现common prefix search。</base:Paragraphs>
    </business:BackgroundArt>
    <business:CitationList>
      <business:PatentDocumentation>
        <base:Paragraphs num="0015">           <business:ApplicationCitation num="0001">
            <base:Text>特開2009－129258号公報</base:Text>
          </business:ApplicationCitation> </base:Paragraphs>
      </business:PatentDocumentation>
      <business:NPL>
        <base:Paragraphs num="0016">           <business:NPLCitation num="0001">
            <base:Text>「日本語テキスト音声合成用記号」JEITA規格 IT－4006、2010年3月</base:Text>
          </business:NPLCitation> </base:Paragraphs>
      </business:NPL>
    </business:CitationList>
    <business:InventionSummary>
      <business:TechnicalProblem>
        <base:Paragraphs num="0017">一般来说,日语文章中,某种程度的表记波动是不可避免的。 例如,可以举出汉字和假名、平假名和片假名、汉字中的新字体和旧字体、或者汉字的代替或误用等。</base:Paragraphs>
        <base:Paragraphs num="0018">假设由词素解析装置进行的输入字符串与词素词典中登记的（表示词素的）标记字符串的比较是基于完全一致的,则需要构建考虑了该波动的词素词典。 作为这样的方法,在专利文献1中记载了交叉书写（在此,例如是指在一个词素内,仅将常用汉字外这样的难解的汉字用假名书写的方法。 的文本的词素解析的方法,公开了在词素解析装置中使用的词素词典的制作时,将词素的标记中包含的难解的字符转换为假名书写,其也作为词素进行登记的方法。 根据该方法,虽然能够应对混杂书写那样的表记的波动,但词素词典中登记的词语的数量增加,词素词典的大小变大。</base:Paragraphs>
        <base:Paragraphs num="0019">此外,在词素词典中登记的标记字符串与输入字符串的比较时,可以考虑应用更复杂的比较规则而不是字符间的完全一致的方法。 但是,该方法虽然能够应对平假名和片假名、新字体和旧字体、单纯的代用或误用,但是难以进行与混杂书写那样的情况对应的规则记述。 例如,如果定义汉字与假名字符串的一致规则,则在实用上需要针对多个汉字的规则,该规则的总数为数千至数万的规模。 其结果是,字符比较中的应用规则的搜索本身需要尝试那样的构造,因此装置的结构变得更复杂。</base:Paragraphs>
        <base:Paragraphs num="0020">另外,作为同样的方法,考虑使用中间表现进行搜索的方法。 在该方法中,预先制作中间表现,将输入和词素词典的词素双方转换为中间表现,在中间表现上进行词素解析即可,所述中间表现是例如即使是不同的字符也处于平假名与片假名、旧字体与新字体的关系等关联性强的字符,或者是形状相似而被误用或代用的字符间,分配相同的符号。</base:Paragraphs>
        <base:Paragraphs num="0021">但是,该方法也不容易应对混杂书写那样的情况。 若中间表达没有唯一性,则词素分析的分析对象产生多种可能性,词素分析处理变得困难。 另一方面,作为中间表达,例如如果使用利用假名的读音标记（例如相对于“ABC”的“ABEC”等）,则能够实现中间表达的唯一性,但无法区别同音异义词等,词素分析结果的可能性增加,结果词素分析的精度降低。</base:Paragraphs>
        <base:Paragraphs num="0022">本发明是鉴于这样的情况而完成的,其目的在于,提供一种能够抑制词素词典的大小的增加,并且能够将词素标记假说包含中间表现来考虑,能够应对混杂书写等标记的波动而高效地进行高精度的词素分析的词素分析装置以及程序。</base:Paragraphs>
      </business:TechnicalProblem>
      <business:TechnicalSolution>
        <base:Paragraphs num="0023">（1）为了实现上述目的,本发明的词素解析装置是输出与所输入的语句对应的词素解析结果的词素解析装置,其特征在于,具备：从所输入的语句中切出并生成部分字符串的部分字符串生成部、使用中间表达辞典从所述生成的部分字符串中生成能够作为中间阶段转换的1个以上的表达作为中间表达的中间表达生成部、使用词素辞典列举与所述生成的中间表达及所述中间表达的连结对应的词素的词素列举部、以及搜索并输出所述列举的词素中满足规定的条件的词素串的词素串搜索部。</base:Paragraphs>
        <base:Paragraphs num="0024">由此,能够在抑制词素词典的大小的增加的同时,考虑包含中间表现在内的词素表述假说,能够与混杂书写等表述的波动对应地进行高效且高精度的词素分析。</base:Paragraphs>
        <base:Paragraphs num="0025">（2）另外,本发明的词素分析装置的特征在于,所述中间表达辞典以及所述词素辞典中的至少一方存储将能够构成部分字符串的字符元素以及与所述字符元素对应的中间表达交替排列而成的代码串。 由此,能够将字符素串和与其对应的中间表现的组存储在一个区域中而不是分别存储,能够简化词典数据结构。</base:Paragraphs>
        <base:Paragraphs num="0026">（3）另外,本发明的词素分析装置的特征在于,将所述中间表达辞典以及所述词素辞典的一方的全部或者一部分用作另一方的全部或者一部分。 由此,能够削减存储所需的存储器量,能够抑制词素词典的大小的增加,并且高效地进行词素解析。</base:Paragraphs>
        <base:Paragraphs num="0027">（4）另外,本发明的词素分析装置的特征在于,所述中间表达词典和所述词素词典中的一方以将字符元素和与所述字符元素对应的中间表达交替排列而成的符号串作为第1词典数据进行存储,另一方以将字符元素和与所述字符元素对应的中间表达的存储顺序以与所述第1词典数据相反的顺序交替排列而成的符号串对作为所述第1词典数据存储的字符元素串的一部分或全部的从开头到规定的字符素数为止的字符元素串进行存储。</base:Paragraphs>
        <base:Paragraphs num="0028">（5）另外,本发明的程序是通过使具有词典的形态分析装置的计算机执行而输出与所输入的语句对应的词素分析结果的程序,其特征在于,包括：从所输入的语句切出并生成部分字符串的处理、使用中间表达词典从所述生成的部分字符串生成能够作为中间阶段转换的1个以上的表达作为中间表达的处理、使用词素词典列举与所述生成的中间表达及所述中间表达的连结对应的词素的处理、以及搜索并输出所述列举的词素中满足规定的条件的词素列的处理。</base:Paragraphs>
        <base:Paragraphs num="0029">由此,能够在抑制词素词典的大小的增加的同时,考虑包含中间表现在内的词素表述假说,能够与混杂书写等表述的波动对应地进行高效且高精度的词素分析。</base:Paragraphs>
      </business:TechnicalSolution>
      <business:AdvantageousEffects>
        <base:Paragraphs num="0030">根据本发明,能够抑制词素词典的大小的增加,并且考虑包含中间表现在内的词素表述假设,能够与混杂书写等表述的波动对应地进行高效且高精度的词素分析。</base:Paragraphs>
      </business:AdvantageousEffects>
    </business:InventionSummary>
    <business:DrawingsDescription>
      <base:Paragraphs num="0031">
        <base:FigureReference num="0001">图0001是表示本发明的词素解析装置的框图。</base:FigureReference>
        <base:FigureReference num="0002">图0002是表示本发明的数据结构的一例的图。</base:FigureReference>
        <base:FigureReference num="0003">图0003是表示本发明的数据结构的一例的图。</base:FigureReference>
        <base:FigureReference num="0004">图0004是表示本发明的词素解析装置的处理的一例的流程图。</base:FigureReference>
        <base:FigureReference num="0005">图0005是表示本发明的词素解析装置的处理的一例的流程图。</base:FigureReference>
        <base:FigureReference num="0006">图0006是表示本发明的词素解析装置的处理的一例的流程图。</base:FigureReference>
        <base:FigureReference num="0007">图0007是表示本发明的数据结构的一例的图。</base:FigureReference>
      </base:Paragraphs>
    </business:DrawingsDescription>
    <business:EmbodimentsDescription>
      <base:Paragraphs num="0032">接着,参照附图对本发明的实施方式进行说明。 在以下的说明中,即使标记字符串相同,中间表达不同的词素作为不同的词素来处理。</base:Paragraphs>
      <base:Paragraphs num="0033">[第1实施方式]（词素分析装置的结构） 
图1是示出词素分析装置100的框图。 词素分析装置100例如由PC等构成,输出与所输入的语句对应的词素列。 词素解析装置100在词素解析中的词素候选的列举中,利用中间表达生成部120将输入字符串的部分字符串暂时转换为规定的中间表达,将具有相同的中间表达的词素也列举为词素的候选。 词素分析装置100具有部分字符串生成部110、中间表达生成部120、词素列举部130和词素序列搜索部140。 </base:Paragraphs>
      <base:Paragraphs num="0034">部分字符串生成部110从输入的语句中切出并生成部分字符串。 中间表达生成部120使用中间表达辞典125,生成可从所生成的部分字符串转换的一个以上的表达作为中间表达。 中间表达是在对字符串进行词素解析时能够在中间的阶段转换的表达,例如是对字符串用片假名表示的读音。 这样,通过使用中间表达,能够抑制词素词典的大小的增加,并且能够将词素表述假说包含中间表达来考虑,能够与混杂书写等表述的波动对应地高效地进行精度高的词素解析。</base:Paragraphs>
      <base:Paragraphs num="0035">中间表达产生单元120根据预定的转换规则将输入句子的所有部分字符串转换成中间表达。 为了将各字符元素和词素词典中包含的词素（构成词素的字符元素的列）转换为中间表达,由中间表达词典125确定转换规则。 在部分字符串登记于中间表达辞典125的情况下,访问中间表达辞典125,将该部分字符串和中间表达的组发送到词素列举部130。 此时,也可以与输入字符串中的对应位置信息（对应于输入字符串的第几个字符至第几个字符等）一起发送。</base:Paragraphs>
      <base:Paragraphs num="0036">词素列举部130使用词素词典135,生成所生成的中间表达以及构成与中间表达的连结对应的词素的字符串。 中间表达的连结是指以满足规定条件的形式连结中间表达的排列而制作的中间表达。 规定的条件例如是规定的个数。</base:Paragraphs>
      <base:Paragraphs num="0037">词素列举部130分别访问词素词典135,如果存在中间表达一致的词素,则将该中间表达和词素信息作为词素候选的信息输出,发送到词素序列搜索部140。 此时,为了在后述的词素序列搜索部140的处理中使用,也可以输出输入句子中的部分字符串。 此时,如果需要,也可以与中间表现对应地连结部分字符串并输出。</base:Paragraphs>
      <base:Paragraphs num="0038">另外,词素信息中包含相对于输入字符串的对应位置信息和词素字符串。 如后所述,在词素串搜索中进行标记字符串与词素字符串的比较的情况下,需要在词素信息中包含用于复原标记字符串的信息。 词素序列搜索部140只要是能够参照输入字符串的构造,则也可以仅是上述的对应位置信息。</base:Paragraphs>
      <base:Paragraphs num="0039">举例来说,考虑使用片假名字符串表示作为中间表示。 以下,将输入字符串等相对于标记字符串的最小的构成要素称为字符素。 另外,在多数情况下,1个字符素对应于1个字符,但有时也优选将由2个字符以上构成的字符串作为1个字符素来处理。 例如,在浊音点或半浊音点作为独立的1个字符被编码化的系统中,假名1个字符与浊音点或半浊音点的连续不是考虑为2个字符素,而是将2个字符的连续考虑为1个字符素,例如在三元结构中树的深度变浅,能够进行更高效的处理。</base:Paragraphs>
      <base:Paragraphs num="0040">词素串搜索部140搜索所列举的词素中的满足规定的条件的词素串。 其结果,优选搜索词素候补的最佳排列并输出。 例如,优选的是,词素序列搜索部140通过最小成本法等,针对词素列举部130输出的词素候选决定满足规定的条件的排列,与各词素的词素信息等一起作为词素分析结果输出。</base:Paragraphs>
      <base:Paragraphs num="0041">另外,在中间表现生成中,也可以分别从1个字符素串生成多种中间表现。 例如在中间表现为假名表现的情况下,如果对字符元素或字符元素串存在多个假名标记（读音）,则生成多个中间表现。 同样地,在词素候选列举中,也可以从一个中间表现生成多个词素候选。 例如,从一个中间表达产生多个同音异义词。</base:Paragraphs>
      <base:Paragraphs num="0042">（具体例） 
以下,“挽回”（&lt;&gt;内为中间表现表记。以下相同。） 关于,作为进行词素解析的具体例,考虑词素词典135中没有“重复”这样的混杂表达的词素的情况。 </base:Paragraphs>
      <base:Paragraphs num="0043">“バ”“エン”“挽回”“回”这样的字符串作为词素被登记的情况下,在以往的方法中,对于输入字符串“挽回”,只以“バ”“エン”“回”这3个词素连接的形式成为词素候补。 另外,关于“的话”、“嗯”,通常分别作为助词、感叹词等进行登记。</base:Paragraphs>
      <base:Paragraphs num="0044">与此相对,在中间表达生成部120中,首先根据“巴”“嗯”“次”生成中间表达“巴”“嗯”“凯”。 为此,需要确定从包含在词素或词素词典中的词素（构成词素的词素的列）向中间表现的变换规则。 例如,设置针对全部的字符元素的转换规则、和来自与词素词典所包含的全部的词素对应的字符元素串的转换规则即可。</base:Paragraphs>
      <base:Paragraphs num="0045">接着,在词素列举部130中,从词素词典135中列举与连续的中间表达的所有可能的连结即中间表达“Ban”“Ban”“Ban kai”“Ban”“Ban kai”“Kai”对应的词素。 由此,从“bankai”到“挽回”也作为词素的候补被列举出来。 另外,也可以不考虑所有可能的连结,而是例如确定最大的连结个数来减少词素词典的参照次数。</base:Paragraphs>
      <base:Paragraphs num="0046">这样,通过经由一次中间表达,在针对“挽回”这样的输入的词素解析处理中,能够考虑意思上包含“挽回”这样的词素的可能性。</base:Paragraphs>
      <base:Paragraphs num="0047">（进行经由中间表现的处理的影响的缓和） 
在词素串的搜索中,例如,也可以将与标记字符串的编辑距离添加到成本函数中,使得产生了字符素置换的词素候选难以被选择。 例如,当字符的插入、删除、置换分别为距离1时,词素字符串“挽回”与输入字符串“挽回”之间的编辑距离为2。 将对该编辑距离D乘以适当的加权系数Wd而得到的值与原来的词素产生成本Ct(m)相加而得到的值用以下的式（1）表示。 </base:Paragraphs>
      <base:Paragraphs num="0048">Ct‘(m)=Ct(m)+Wd·D…（1） 
通过将式（1）作为词素分析中的发生成本,能够使通过置换生成的词素候选难以包含在最终的词素分析结果中。 在这个例子的情况下,一般认为词素“バ”“エン”“回”的发生成本比较大（这与该词素的出现频率低相对应）,因此对于“挽回”的词素分析结果,与“バ”“エン”“伐木”相比,更容易选择经由中间表现生成的“挽回”。 </base:Paragraphs>
      <base:Paragraphs num="0049">另外,也可以在产生成本、连接成本的计算中考虑中间表现本身。 例如,通过使用从大量的文本中预先求出中间表现的出现概率,越是成为出现概率大的中间表现的情况,发生成本越小那样的发生成本函数、或对于邻接词素的中间表现对预先从大量的文本中调查出现概率,中间表现对的出现概率越大,连接成本越小那样的连接成本函数,能够避免从中间表现来看成为不自然的词素分析结果。</base:Paragraphs>
      <base:Paragraphs num="0050">第1实施方式中使用的中间表达辞典125具有由构成标记字符串的字符素串和与其对应的中间表达的组的表表示的数据结构,但也可以由不同的表达形态的数据结构构成相同的内容。</base:Paragraphs>
      <base:Paragraphs num="0051">即,中间表达辞典125和词素辞典135中的至少一方优选存储将可构成部分字符串的字符元素和与字符元素对应的中间表达交替排列而成的码串。 由此,能够将字符素串和与其对应的中间表现的组存储在一个区域中而不是分别存储,能够简化词典数据结构。</base:Paragraphs>
      <base:Paragraphs num="0052">例如,中间表达辞典125中,“挽回”可以用“挽回/挽回/挽回”（这里“/”表示标记字符串和中间表达标记的分隔符）的形式来表达。 通过使用该表现,能够将字符素串和与其对应的中间表现的组不分开而存储在1个区域中,能够简化词典数据结构。 这对于词素词典135中的中间表达和词素字符串的表达方式也是同样的。</base:Paragraphs>
      <base:Paragraphs num="0053">进而,若将它们以尝试的形式存储,则利用通过交替排列而被编码的信息,从开头起的共通部分在各词典中被共享,能够削减在转换表中存储所需的存储器量。 即,能够将中间表达辞典125和词素辞典135中的一者的全部或一部分用作另一者的全部或一部分。 由此,能够抑制词典的大小的增加,并且高效地进行词素解析。</base:Paragraphs>
      <base:Paragraphs num="0054">图2、图3是表示数据结构的一例的图。 图2示出了用于从标记字符串向中间表现标记的转换的词典的尝试的例子,图3示出了用于从中间表现向词素字符串的转换的词典的尝试的例子。</base:Paragraphs>
      <base:Paragraphs num="0055">在这里,用于“Y/I”、“KA/KA”、“BA/BA”、“UN/N”、“Win/Ban”、“Win/Ban”、“Win/Ban kai”、“Win/Hiku”、“Win/Kai”、“Win/Mwas”、“Win/Mwal”的转换的信息用Try来表现。</base:Paragraphs>
      <base:Paragraphs num="0056">同样地,在词素词典135中包含词素字符串作为词素信息之一的情况下,能够以将构成词素字符串的字符元素和与字符元素对应的中间交替排列的表现的形式,存储中间表现和词素字符串的组。</base:Paragraphs>
      <base:Paragraphs num="0057">（访问字典） 
在使用基于尝试的表现的情况下,在对词典的访问中,有时需要对多个路径进行尝试的搜索。 作为一例,对本实施方式的按照字符串和中间表现的顺序交替排列的数据结构的词典的访问进行说明。 图4～图6是示出词素分析装置100的处理的一例的流程图。 在此,示出以文字素、中间表现的顺序交替排列的情况下的搜索流程的例子。 在以下的处理中,用{Ng}、{Nc}、{Ni}等表示节点集合。 </base:Paragraphs>
      <base:Paragraphs num="0058">首先,将根节点代入{Ng},将{Ni}设为空集（步骤S1）。 然后,判定{Ng}中是否存在要素（步骤S2）,在{Ng}中存在要素时进入步骤S3,在{Ng}为空集合时进入步骤S11。 在步骤S3中,从{Ng}中取出一个节点,将取出的节点设为n。 从集合中删除取出的节点。 此外,在取出节点的处理中,以下也同样地将取出的节点从所属的集合中删除。 然后,将节点n的子节点全部代入节点集合{Nc}（步骤S4）。</base:Paragraphs>
      <base:Paragraphs num="0059">判定{Nc}中是否存在要素（步骤S5）,在存在要素时进入步骤S6,在不存在要素时返回步骤S2。 在步骤S6中,从{Nc}中取出一个节点,将该节点设为c。 在步骤S7中,判定与从节点n到节点c的分支相关联的符号是否与搜索对象的字符元素一致,在与搜索对象的字符元素一致的情况下,进入步骤S8。 在不一致的情况下进入步骤S9。 在步骤S8中将节点c追加到{Ng},返回到步骤S5。</base:Paragraphs>
      <base:Paragraphs num="0060">另一方面,在步骤S9中,判定与从节点n到节点c的分枝相关联的符号是否为分隔符字符,在是分隔符字符的情况下,进入步骤S10,在不是分隔符字符的情况下,返回步骤S5。 然后,在步骤S10中,将节点c追加到{Ni},返回到步骤S5。</base:Paragraphs>
      <base:Paragraphs num="0061">在步骤S11中,判定在{Ni}中是否存在要素,在存在要素的情况下进入步骤S12,在{Ni}为空集合的情况下进入步骤S21。</base:Paragraphs>
      <base:Paragraphs num="0062">在步骤S12中,从{Ni}取出一个节点,将取出的节点设为n。 将节点n的子节点全部代入{Nc}（步骤S13）。 判定{Nc}中是否存在要素（步骤S14）,在存在要素的情况下进入步骤S15。 在为空集合时返回到步骤S11。</base:Paragraphs>
      <base:Paragraphs num="0063">在步骤S15中,从{Nc}取出一个节点,将该节点设为c。 判定节点c是否是叶节点（步骤S16）,在是叶节点的情况下进入步骤S17,在不是叶节点时进入步骤S18。 在步骤S17中,将位于从根节点到节点c的分枝上的字符素/中间表现作为搜索结果输出,并返回到步骤S14。</base:Paragraphs>
      <base:Paragraphs num="0064">在步骤S18中,判定与从节点n到节点c的分枝相关联的符号是否为分隔符字符,在是分隔符字符的情况下进入步骤S19,在不是分隔符字符的情况下进入步骤S20。 在步骤S19中,将节点c追加到{Ng},返回到步骤S14。 在步骤S20中,将节点c追加到{Ni},返回到步骤S14。 在步骤S21中,在{Ng}为空集合时结束。 在不是空集的情况下返回步骤S2。</base:Paragraphs>
      <base:Paragraphs num="0065">在第1实施方式中,在中间表现生成处理中使用中间表现辞典125,在词素列举处理中使用词素辞典135,但也可以在中间表现生成处理中使用词素辞典135。</base:Paragraphs>
      <base:Paragraphs num="0066">如果在词素词典135中的词素信息中包含词素字符串,则能够构成为从词素列举部130中的词素词典135中得到与中间表达生成部120所需的词素字符串对应的中间表达。</base:Paragraphs>
      <base:Paragraphs num="0067">此外,在从中间表达辞典125所具有的标记字符串向中间表达的转换表中,对也是词素字符串的标记字符串标注表示该情况的符号,在该表中,搜索具有规定的中间表达且标注有符号的标记字符串,由此也能够进行词素列举部130所需的从中间表达向词素字符串的转换。 由此,能够削减整体的词典大小。</base:Paragraphs>
      <base:Paragraphs num="0068">也可以是,中间表达辞典125和词素辞典135中的一方以将字符元素和与字符元素对应的中间表达交替排列而成的符号串作为第1辞典数据进行存储,另一方以将字符元素和与字符元素对应的中间表达的存储顺序以与第1辞典数据相反的顺序交替排列而成的符号串对作为第1辞典数据存储的字符元素串的一部分或全部的从开头到规定的字符素数为止的字符元素串进行存储。</base:Paragraphs>
      <base:Paragraphs num="0069">由此,能够在树的下方的部分的数据结构中使用相反顺序的符号列,能够抑制处理量的增加。 例如,在从标记字符串向中间表现的变换中使用的尝试和在从中间表现向词素字符串的变换中使用的尝试中,其中一方（中间表现标记先行的结构）设为从最初到第2个字符素这样的较小的尝试,在比其靠前的搜索中能够使用另一方的尝试。</base:Paragraphs>
      <base:Paragraphs num="0070">在表记字符串和中间表现的变换中,在尝试的数据结构中将树从根（在图中为上侧）向叶的方向（在图中为下方向）追寻。 因此,在中间表现生成部120中,只要使用按照文字素、中间表现的顺序排列的“锯/班/次/卡”的尝试即可。 此外,在词素列举部130访问的词素词典135中,只要使用按照中间表现、文字素的顺序排列的“盘/盘/盘/盘/次”的尝试即可。</base:Paragraphs>
      <base:Paragraphs num="0071">但是,作为一般的倾向,随着接近树叶,树木的分支的数量减少,因此即使试行地沿着树木向下方向,通常处理量也不会增加那么多。 例如,在从中间表现向词素字符串转换时,在使用“磨擦/面包车/回/卡”的结构的尝试的情况下,需要跳过字符元素先得到中间表现,在跳过字符元素时,必须经过该位置的所有分支,但是即使在进行这样的处理的情况下,与树的上方相比,由于树的下方的部分分支少,所以处理量几乎不会增加。 因此,也可以是,在从标记字符串向中间表现的变换中使用的试行和在从中间表现向词素字符串的变换中使用的试行中,一方例如设为从最初到第2个字符素这样的较小的试行,在比其靠前的搜索中使用另一方的试行。 由此,能够进一步削减整体的大小,虽然需要试行性的搜索,但处理量的增加是有限的。</base:Paragraphs>
      <base:Paragraphs num="0072">例如,试行的向下方的搜索在处理量上优选为在深度方向上浅的搜索。 因此,一般来说,文字元素先行于中间表现的“磨牙/面包车/回/卡”的构成的尝试,最好是和以往一样来制作。 此外,在另一个中间表现先行的结构中,优选进行直到词素字符串的第1个字符素为止的尝试的方法。 在上述例子中,对截止到“拔盘/拔盘”的数据进行尝试。</base:Paragraphs>
      <base:Paragraphs num="0073">另外,从中间表现向词素字符串转换时,在上述例子的情况下,从访问到“盘/盘”的叶（本文件上的表现中最右）的状态开始,为了下一个处理,需要访问与“盘/盘/回/凯”中的“回”对应的节点,但由于已经得到了到达该节点所需的信息,即到“回”为止的字符素（即“盘”）和其中间表现（“盘”）,因此该访问是容易的。 图7是表示数据结构的一例的图,示出了与图3对应的、由到第1个字符为止的标记字符为止制作出的尝试。</base:Paragraphs>
      <base:Paragraphs num="0074">或者,也可以使用如下方法：不从尝试的路径追溯而是将用于直接参照“抱负/抱负/回/凯”的尝试中的“回”的节点的位置信息存储在“抱负/抱负”的尝试的叶节点中,利用该位置信息直接访问尝试的中间节点。</base:Paragraphs>
      <base:Paragraphs num="0075">[其他实施方式]（中间表达的其他例子） 
在上述中,作为中间表现而使用了片假名表述,但中间表现也能够使用除此以外的表现。 例如也可以使用基于IPA（International Phonetic Alphabet,国际语音记号）的发音表记。 </base:Paragraphs>
      <base:Paragraphs num="0076">或者,也可以使用仅由假名和常用汉字构成的字符的集合,并且尽可能将汉字表述的表述作为中间表现来使用。 根据上述方法,在词素分析中,词素的产生成本函数考虑标记字符串和中间表达双方,能够更准确地区分如专有名词那样容易使用旧体的词素和难以使用旧体的词素。 例如,将作为地名的“樱井”表记为“樱井”的情况较少,可以认为“樱井”这一表记具有作为人名的意思的可能性较高,但另一方面,“樱井”并非完全没有地名的可能性。</base:Paragraphs>
      <base:Paragraphs num="0077">在基于最小成本法的词素解析中,最终也考虑词素的排列,进行综合的判断,但在上述方法中,作为经常使用的人名的“樱井”“樱井”和作为地名的“樱井”被登记在词素词典中,不将作为很少使用的地名的“樱井”登记在词素词典中,而能够在词素解析的处理中考虑作为地名使用的“樱井”。 由此,例如,在地名之后紧接着“市”、“町”这样的词素的情况下,如果使用以使两者之间的连接成本变得更小的方式定义的连接成本函数,则能够选择作为地名的词素而不是人名。 但是,如果中间表现的抽象度过高,则处理时应考虑的词素的可能性的数量增加。</base:Paragraphs>
      <base:Paragraphs num="0078">这在同音词素较多的专有名词中尤其会成为问题。 例如,在上述的例子中,如果中间表达使用片假名表述,则相对于“樱井”的中间表达为“樱井”,例如“佐仓井”这样的更多的词素的可能性也需要考虑。 在上述方法中,通过使文字置换数反映到产生成本中,该可能性在成本最优解的搜索中被排除,但通过在中间表现中使用“樱井”这样的抽象度更低的表现,对表记波动的对应变得有限,另一方面,减少在之后的搜索中应考虑的可能性的数量,在处理量上能够进行更高效的处理。</base:Paragraphs>
      <base:Paragraphs num="0079">（不使用分隔符的例子） 
在上述的第2和第4实施方式中,在将字符元素和中间表现交替排列的代码串表现中使用了分隔符字符,但排列方法不限于此。 例如,在表示字符素的符号和表示中间表现的符号在其符号位置（符号的值）上完全独立的情况下,不需要分隔符。 </base:Paragraphs>
      <base:Paragraphs num="0080">（程序） 
另外,以上那样的动作例如能够通过使搭载于词素分析装置100的CPU执行程序来实现。 该程序能够以记录于记录介质的状态进行流通。 另外,这样的程序能够通过经由由构成网络的公共电话线路、专用电话线路、有线电视线路、无线通信线路等构成的通信网等传输介质接收由作为发送装置的计算机发送的信号来流通。 </base:Paragraphs>
    </business:EmbodimentsDescription>
    <business:ReferenceSignsList>
      <base:Paragraphs num="0081">100词素分析装置110部分字符串生成部120中间表现生成部125中间表现辞典130词素列举部135词素辞典140词素列搜索部</base:Paragraphs>
    </business:ReferenceSignsList>
  </business:Description>
  <business:Drawings lang="ja" sourceDB="JP">
    <base:Figure num="0001">
      <base:Image id="000003" he="66" wi="71" file="2016126498_000003.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0002">
      <base:Image id="000004" he="80" wi="79" file="2016126498_000004.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0003">
      <base:Image id="000005" he="96" wi="75" file="2016126498_000005.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0004">
      <base:Image id="000006" he="115" wi="69" file="2016126498_000006.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0005">
      <base:Image id="000007" he="122" wi="64" file="2016126498_000007.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0006">
      <base:Image id="000008" he="84" wi="68" file="2016126498_000008.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
    <base:Figure num="0007">
      <base:Image id="000009" he="65" wi="78" file="2016126498_000009.TIF" imgContent="drawing" imgFormat="TIFF"/>
    </base:Figure>
  </business:Drawings>
  <business:Claims lang="ja" dataFormat="original" sourceDB="JP">
    <business:Claim num="0001">
      <business:ClaimText>词素列举部,其使用词素词典列举与所述生成的中间表达及所述中间表达的连结对应的词素；词素序列搜索部,其搜索并输出所述列举的词素中满足规定的条件的词素序列,所述词素列举部从所述输入的语句中切出并生成部分字符串,所述中间表达生成部使用中间表达词典从所述生成的部分字符串生成能够作为中间阶段转换的1个以上的表达作为中间表达,所述词素列举部使用词素词典列举与所述生成的中间表达及所述中间表达的连结对应的词素。</business:ClaimText>
    </business:Claim>
    <business:Claim num="0002">
      <business:ClaimText>根据权利要求1所述的词素分析装置,其特征在于,所述中间表达辞典以及所述词素辞典的至少一方存储将能够构成部分字符串的字符元素以及与所述字符元素对应的中间表达交替排列而成的符号串。</business:ClaimText>
    </business:Claim>
    <business:Claim num="0003">
      <business:ClaimText>根据权利要求1或2所述的词素分析装置,其特征在于,将所述中间表达辞典以及所述词素辞典的一方的全部或一部分用作另一方的全部或一部分。</business:ClaimText>
    </business:Claim>
    <business:Claim num="0004">
      <business:ClaimText>根据权利要求3所述的词素分析装置,其特征在于,所述中间表达词典和所述词素词典中的一方以将字符元素和与所述字符元素对应的中间表达交替排列而成的符号串作为第1词典数据进行存储,另一方以将字符元素和与所述字符元素对应的中间表达的存储顺序以与所述第1词典数据相反的顺序交替排列而成的符号串对作为所述第1词典数据存储的字符元素串的一部分或全部的从开头到规定的字符素数为止的字符元素串进行存储。</business:ClaimText>
    </business:Claim>
    <business:Claim num="0005">
      <business:ClaimText>一种程序,其通过使具有词典的形态分析装置的计算机执行而输出与输入的语句对应的词素分析结果,其特征在于,包括：从输入的语句中切出并生成部分字符串的处理、使用中间表达词典从所述生成的部分字符串中生成能够作为中间阶段转换的1个以上的表达作为中间表达的处理、使用词素词典列举与所述生成的中间表达及所述中间表达的连结对应的词素的处理、以及搜索并输出所述列举的词素中满足规定条件的词素串的处理。</business:ClaimText>
    </business:Claim>
  </business:Claims>
</business:PatentDocumentAndRelated>